on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      # We need this to be able to run VM-based tests
      # https://github.blog/changelog/2023-02-23-hardware-accelerated-android-virtualization-on-actions-windows-and-linux-larger-hosted-runners/
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - uses: nixbuild/nix-quick-install-action@v27
      - uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ runner.os }}-${{ github.sha }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          # Only save the cache for pushes to main. This avoids blowing up the
          # cache allowance with PR builds.
          save: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

      - run: |
          hostnames=$(nix eval --raw ".#nixosConfigurations" --apply 'x: builtins.concatStringsSep " " (builtins.attrNames x)')
          for h in $hostnames; do
            attribute="nixosConfigurations.$h.config.system.build.toplevel"
            nix build -L .#$attribute --no-link
          done

      - run: nix flake check -L

      - name: Build repository metrics
        run: nix build .#repository-metrics --out-link ${{ runner.temp }}/metrics
      - name: Save repository metrics as an artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ runner.temp }}/metrics

  # We deploy metrics about the build to GitHub pages, so it can be scraped our
  # Prometheus. The metrics always get built, but we only actually publish them
  # on main branch builds.
  deploy-metrics:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
