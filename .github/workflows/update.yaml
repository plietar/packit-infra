name: Update packages
on:
  schedule:
    - cron: '0 0 * * *' # Daily at midnight UTC
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
      contents: write

    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Update outpack_server
        run: nix run .#update outpack_server -- --write-commit-log ${{ runner.temp }}/outpack_server.md
      - name: Update packit
        run: nix run .#update packit -- --write-commit-log ${{ runner.temp }}/packit.md

      - name: Prepare PR message
        uses: actions/github-script@v7
        id: prepare-message
        with:
          script: |
            const fs = require("fs");
            const lf = new Intl.ListFormat('en');

            var packages = [];
            var message = "";
            for (const p of ["outpack_server", "packit"]) {
              if (fs.existsSync(`${process.env.RUNNER_TEMP}/${p}.md`)) {
                var sources = JSON.parse(fs.readFileSync(`packages/${p}/sources.json`));
                message += `# Updating ${p} to ${sources.src.srv}\n`;
                message += fs.readFileSync(`${process.env.RUNNER_TEMP}/${p}.md`);
                packages += [p];
              }
            }
            core.setOutput('title', "Update " + lf.format(packages));
            core.setOutput('body', message);

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        id: create-pr
        with:
          branch: actions/update-packages
          title: ${{ steps.prepare-message.outputs.title }}
          body: ${{ steps.prepare-message.outputs.body }}
          commit-message: |
            ${{ steps.prepare-message.outputs.title }}

            ${{ steps.prepare-message.outputs.body }}
          reviewers: plietar

      - name: Comment hint
        uses: thollander/actions-comment-pull-request@v3
        if: steps.create-pr.outputs.pull-request-operation == 'created'
        with:
          pr-number: ${{ steps.create-pr.outputs.pull-request-number }}
          message: |
            You can deploy this pull request by running the following command:

            ```sh
            nix run "github:${{ github.repository }}?ref=refs/pull/${{ steps.create-pr.outputs.pull-request-number }}#deploy" <hostname>
            ```
